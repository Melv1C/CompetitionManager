version: '3.8'
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5555:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - my-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      PORT: 3000
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres?schema=public
      BETTER_AUTH_SECRET: change-me
      BETTER_AUTH_URL: http://localhost
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'
    networks:
      - my-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    command: sh -c "echo 'frontend build container'"
    volumes:
      - frontend-dist:/app/dist
    networks:
      - my-network

  nginx:
    image: nginx:alpine
    volumes:
      - frontend-dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - '8080:80'
    depends_on:
      - backend
      - frontend
    networks:
      - my-network

volumes:
  frontend-dist:

networks:
  my-network:
    driver: bridge
